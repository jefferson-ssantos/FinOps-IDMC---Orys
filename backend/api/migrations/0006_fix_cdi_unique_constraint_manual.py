# Generated by Django 4.2.23

from django.db import migrations

# O nome da constraint antiga foi extraído diretamente do log de erro do PostgreSQL
UQ_CDI_TASK_RUN_CONSTRAINT_NAME_OLD = "uq_cdi_task_run"
# O nome da nova constraint é o que o Django geraria automaticamente
UQ_CDI_TASK_RUN_CONSTRAINT_NAME_NEW = "api_consumocdijobexecucao_configuracao_id_task_id_task_run_id_org_id_en_877c223c_uniq"

class Migration(migrations.Migration):

    dependencies = [
        # ATENÇÃO: Verifique e coloque aqui o nome da sua última migração. Ex: '0005_...'
        ('api', '0005_alter_consumocdijobexecucao_unique_together'), 
    ]

    operations = [
        # Passo 1: Remover a constraint antiga e incorreta do banco de dados, se ela existir.
        migrations.RunSQL(
            sql=f"ALTER TABLE api_consumocdijobexecucao DROP CONSTRAINT IF EXISTS {UQ_CDI_TASK_RUN_CONSTRAINT_NAME_OLD};",
            reverse_sql=migrations.RunSQL.noop
        ),
        
        # Passo 2: Remover a constraint gerada automaticamente pelo Django (caso exista de uma migração anterior) para garantir que possamos criar a nova.
        migrations.RunSQL(
            sql=f"ALTER TABLE api_consumocdijobexecucao DROP CONSTRAINT IF EXISTS {UQ_CDI_TASK_RUN_CONSTRAINT_NAME_NEW};",
            reverse_sql=migrations.RunSQL.noop
        ),

        # Passo 3: Adicionar a nova constraint correta, conforme definido no models.py
        migrations.AlterUniqueTogether(
            name='consumocdijobexecucao',
            unique_together={('configuracao', 'task_id', 'task_run_id', 'org_id', 'environment_id', 'start_time', 'end_time')},
        ),
    ]
